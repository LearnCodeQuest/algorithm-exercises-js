// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import { fiboStep } from './helpers/index.js';

const DEBUG =
  process.env.DEBUG === 'true' || process.env.DEBUG === '1' || false;

function problem0002(_top, _DEBUG) {
  let i = 0;
  let last1 = 1;
  let last2 = 0;
  let evenSum = 0;

  let fibo = 0;
  do {
    fibo = fiboStep(i, last1, last2);

    if (_DEBUG) console.log(`Fibonacci (${i}) = ${fibo}`);

    if (fibo % 2 === 0) {
      evenSum += fibo;
    }

    // next keys:
    last2 = last1;
    last1 = fibo;
    i += 1;
  } while (fibo < _top);

  if (_DEBUG) console.log(`RESULT = ${evenSum}`);
  return evenSum;
}

export default problem0002;
export { problem0002 };
